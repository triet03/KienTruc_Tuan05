package vn.edu.iuh.fit.bai1;

import java.util.ArrayList;
import java.util.List;

// Component - Giao di·ªán chung cho File v√† Directory
interface FileSystemEntity {
    String getName();
    void showInfo();
    default void add(FileSystemEntity entity) {
        throw new UnsupportedOperationException("Kh√¥ng th·ªÉ th√™m v√†o ph·∫ßn t·ª≠ n√†y");
    }
    default void remove(FileSystemEntity entity) {
        throw new UnsupportedOperationException("Kh√¥ng th·ªÉ x√≥a ph·∫ßn t·ª≠ n√†y");
    }
}

// Leaf - T·∫≠p tin, kh√¥ng th·ªÉ ch·ª©a th·ª±c th·ªÉ con
class File implements FileSystemEntity {
    private String name;
    private String content;

    public File(String name, String content) {
        this.name = name;
        this.content = content;
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public void showInfo() {
        System.out.println("üìÑ File: " + name + " (Content: " + content + ")");
    }
}

// Composite - Th∆∞ m·ª•c c√≥ th·ªÉ ch·ª©a t·∫≠p tin ho·∫∑c th∆∞ m·ª•c con
class Directory implements FileSystemEntity {
    private String name;
    private List<FileSystemEntity> children = new ArrayList<>();

    public Directory(String name) {
        this.name = name;
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public void add(FileSystemEntity entity) {
        children.add(entity);
    }

    @Override
    public void remove(FileSystemEntity entity) {
        children.remove(entity);
    }

    @Override
    public void showInfo() {
        System.out.println("üìÇ Directory: " + name);
        for (FileSystemEntity entity : children) {
            entity.showInfo();
        }
    }
}

// Main - Ki·ªÉm th·ª≠ h·ªá th·ªëng
public class FileSystemTest {
    public static void main(String[] args) {
        // T·∫°o t·∫≠p tin
        File file1 = new File("Resume.pdf", "CV c·ªßa t√¥i");
        File file2 = new File("Project.docx", "D·ª± √°n chi ti·∫øt");

        // T·∫°o th∆∞ m·ª•c
        Directory root = new Directory("Root");
        Directory documents = new Directory("Documents");
        Directory images = new Directory("Images");

        // X√¢y d·ª±ng c·∫•u tr√∫c c√¢y
        documents.add(file1);
        documents.add(file2);
        root.add(documents);
        root.add(images);

        // Hi·ªÉn th·ªã th√¥ng tin c√¢y th∆∞ m·ª•c
        root.showInfo();
    }
}
